---
title: "New York State"
format: html
editor: visual
---

```{r echo=FALSE, warning=FALSE, message=FALSE}

nystate <- read.csv("~/Documents/GitHub/creditresearch/state_NY.csv",
 na = c("NA", "Joint", "Sex Not Available", "Race Not Available", "Ethnicity Not Available", "Exempt", "Free Form Text Only"))

library(janitor)
library(ggplot2)
library(ggridges)
library(dplyr)
library(tidyverse)
library(tidymodels)
library(forcats)
```

Data Cleaning:

```{r echo=FALSE, warning=FALSE, message=FALSE}

nystate <- nystate |> select(
  lei, county_code, census_tract, conforming_loan_limit, derived_loan_product_type, derived_dwelling_category, derived_ethnicity, derived_race, derived_sex, action_taken, purchaser_type, preapproval, loan_type, loan_purpose, lien_status, reverse_mortgage, open.end_line_of_credit, business_or_commercial_purpose, loan_amount, loan_to_value_ratio, interest_rate, rate_spread, hoepa_status, total_loan_costs, total_points_and_fees, interest_only_payment, property_value, income, debt_to_income_ratio, applicant_credit_score_type, applicant_ethnicity_observed, applicant_race_observed, applicant_sex, applicant_age, denial_reason.1, denial_reason.2, denial_reason.3, denial_reason.4, tract_population, tract_minority_population_percent, ffiec_msa_md_median_family_income, tract_to_msa_income_percentage)

```

```{r echo=FALSE, warning=FALSE, message=FALSE, eval=FALSE}

#removing NAs
nystate <- nystate |> filter(!is.na(derived_race))
nystate <- nystate |> filter(!is.na(loan_to_value_ratio))
nystate <- nystate |> filter(!is.na(income))
nystate <- nystate |> mutate(action_taken = as.factor(action_taken)) |>
  filter(action_taken != 5 | 6) |> 
  filter(action_taken != 7 ) |>
  filter(action_taken != 8 ) |>
  filter(!is.na(action_taken))
nystate <- nystate |> filter(!is.na(derived_ethnicity))
nystate <- nystate |> filter(!is.na(debt_to_income_ratio))
#changing action taken
nystate <- nystate |> mutate(action_taken =
                   case_when(
                   action_taken == 1 ~ "Loan originated",
                   action_taken == 2 ~ "Approved, not accepted",
                   action_taken == 3 ~ "Denied",
                   action_taken == 4 ~ "Withdrawn",
                   .default = action_taken
                                 ))
```

Income:

```{r echo=FALSE, warning=FALSE, message=FALSE}
nystate %>% 
  mutate(income_new = case_when(income > 1000 ~ 1000, 
                                income < 0 ~ 0,
                                .default = income )) %>% 
  ggplot(aes(income_new)) +
  geom_histogram(binwidth = 10) +
  labs( 
    x = "Income ($)", 
    y = "Density", 
    title = "Income Levels" 
  ) 

```

This graph shows that most of the people in this data set have relatively low incomes.

Loan Amount:

```{r echo=FALSE, warning=FALSE, message=FALSE}
nystate %>% 
  mutate(amount_new = if_else(loan_amount > 1000000, 1000000, loan_amount)) %>% 
  ggplot(aes(amount_new)) +
  geom_histogram(binwidth = 10000, col = "black") +
  labs( 
    x = "Loan amount ($)", 
    y = "Density", 
    title = "Lending Amounts" 
  ) 
```

There is a significant right skew in the distribution of the lending amounts. This indicates that most loans are for relatively low amounts.

```{r echo=FALSE, warning=FALSE, message=FALSE}

nystate |> 
  ggplot(aes(x = loan_to_value_ratio)) +
  geom_histogram(binwidth = 5, fill = "steelblue", color = "black") +
  scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
  labs(
    title = "Loan to Value Ratio Distribution",
    x = "Loan to Value Ratio",
    y = "Count"
  ) +
  theme_minimal()
```

Relationships of Income and Amount to Action Taken:

```{r echo=FALSE, warning=FALSE, message=FALSE}
nystate %>% 
  mutate(amount_new = if_else(loan_amount > 1000000, 1000000, loan_amount)) %>%
ggplot(aes(x = amount_new, y = action_taken, fill = action_taken)) + 
  geom_density_ridges(alpha = 0.5) +
  labs( 
    x = "Loan amount ($)", 
    y = "Action Taken", 
    title = "Lending Amounts and Action Taken",
    fill = "Action Taken"
  ) 
```

```{r echo=FALSE, warning=FALSE, message=FALSE}
nystate %>% 
  mutate(income_new = case_when(income > 120 ~120, 
                                income < 30 ~ 30,
                                .default = income )) %>% 
ggplot(aes(x = income_new, y = action_taken, fill = action_taken)) + 
  geom_density_ridges(alpha = 0.5) +
  labs( 
    x = "Income ($)", 
    y = "Action Taken", 
    title = "Income and Action Taken",
    fill = "Action Taken"
  ) 
```

Race

```{r echo=FALSE, warning=FALSE, message=FALSE}

nystate <- nystate |>
  mutate(race = case_when(
    derived_ethnicity == "Hispanic or Latino" ~ "Hispanic or Latino",
    .default = derived_race
  ))

nystate <- nystate |>
  mutate(race = case_when(
  race == "2 or more minority races" ~ "Other",
  race == "American Indian or Alaska Native" ~ "Other",
  race == "Native Hawaiian or Other Pacific Islander" ~ "Other",
  .default = race
  ))

```

```{r echo=FALSE, warning=FALSE, message=FALSE, plot-wider, fig.width=10, fig.height=4}

nystate |>
    group_by(race) %>%
  summarize(total = n()) %>%
  # Sort by total
  arrange(desc(total)) %>%
  # Make the category column ordered
  mutate(race = fct_inorder(race)) |>
    ggplot(
       aes(y = fct_rev(race), x = total, fill = race)) +
  geom_col() +
  scale_x_continuous(labels = comma) +
  labs(title = "Distribution of Race", y = "Race")
```

```{r echo=FALSE, warning=FALSE, message=FALSE}

nystate |> 
  mutate(ltv = case_when(
    loan_to_value_ratio > 90 ~ 90, 
    loan_to_value_ratio < 25 ~ 25,
    .default = loan_to_value_ratio 
  )) %>%
  filter(race != "Other") |>
  ggplot(aes(x = ltv, fill = race)) +
  geom_density() +
  scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
  labs(
    title = "Loan to Value Ratio Distribution",
    x = "Loan to Value Ratio",
    y = "Count"
  ) +
  theme_minimal() +
  facet_wrap(~ race)

nystate |> 
  mutate(ltv = case_when(
    loan_to_value_ratio > 90 ~ 90, 
    loan_to_value_ratio < 25 ~ 25,
    .default = loan_to_value_ratio 
  )) %>%
  filter(race != "Other") |>
  ggplot(aes(x = ltv, fill = race)) +
  geom_density(aes(y = after_stat(count) / sum(after_stat(count)) * 100), alpha = 0.7) +
  scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 10)) +
  labs(
    title = "Loan to Value Ratio Distribution",
    x = "Loan to Value Ratio",
    y = "Percentage"
  ) +
  theme_minimal() +
  facet_wrap(~ race)

```

```{r echo=FALSE, warning=FALSE, message=FALSE}
  
nystate |> filter(!is.na(action_taken)) |>
  filter(action_taken != "Approved, not accepted") |>
  ggplot(aes(x = race,
             fill = action_taken)) +
  geom_bar(position = "fill") +
  theme(axis.text.y = element_blank(),  axis.ticks.y = element_blank()
        ) +
  labs(x = "Race", y = "Action Taken", fill = "Action Taken") +
  theme_minimal() +
  labs(x = "Action Taken", fill = "Action Taken") +
  theme_minimal(base_size = 12) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for better readability
    legend.position = "top",  # Move the legend to the top for better visibility
    plot.title = element_text(hjust = 0.5)  # Center the plot title
  ) +
  ggtitle("Action Taken by Race in NY State")

```

```{r echo=FALSE, warning=FALSE, message=FALSE, plot-wider3, fig.width=10}
nystate %>% 
  mutate(ltv = case_when(loan_to_value_ratio > 90 ~ 90, 
                         loan_to_value_ratio < 25 ~ 25,
                                .default = loan_to_value_ratio )) %>% 
ggplot(aes(x = ltv, y = action_taken, fill = action_taken)) +
  geom_density_ridges(alpha = 0.5) +
  labs( 
    x = "Loan-to-Value Ratio", 
    y = "Action Taken", 
    title = "Loan-to-Value Ratio and Action Taken",
    fill = "Action Taken"
  ) +
  facet_wrap(~race, ncol = 5) +
  theme_minimal()

nystate %>% 
  mutate(ltv = case_when(loan_to_value_ratio > 90 ~ 90, 
                         loan_to_value_ratio < 25 ~ 25,
                                .default = loan_to_value_ratio )) %>% 
  filter(action_taken != "Approved, not accepted") |>
ggplot(aes(x = ltv, y = action_taken, fill = action_taken)) +
  geom_density_ridges(alpha = 0.5) +
  labs( 
    x = "Loan-to-Value Ratio", 
    y = "Action Taken", 
    title = "Loan-to-Value Ratio and Action Taken",
    fill = "Action Taken"
  ) +
  facet_wrap(~race, ncol = 5) +
  theme_minimal()
```

```{r echo=FALSE, warning=FALSE, message=FALSE, plot-wider4, fig.width=10}
nystate <- nystate |>
  mutate(dtir = case_when(
    debt_to_income_ratio == "30%-<36%" ~ "30%-<40%",
    debt_to_income_ratio %in% c(36, 37, 38, 39) ~ "30%-<40%",
    debt_to_income_ratio %in% c(40, 41, 42, 43, 44, 45, 46, 47, 48, 49) ~ "40%-<50%",
    debt_to_income_ratio == "50%-60%" ~ "50%-<60%",
    debt_to_income_ratio == ">60%" ~ "50%-<60%",
    TRUE ~ debt_to_income_ratio
  ))

nystate <- nystate |>
  mutate(dtir = as.factor(dtir))
```

```{r echo=FALSE, warning=FALSE, message=FALSE}

ggplot(nystate, aes(x = dtir, fill = dtir)) +
   geom_density() +
  labs(title = "Distribution of Debt to Income Ratio", x = "DTI", y = "Count") +
  theme_minimal()
```

```{r echo=FALSE, warning=FALSE, message=FALSE}
ggplot(nystate, aes(x = dtir, fill = dtir)) +
   geom_bar() +
  labs(title = "Distribution of Debt to Income Ratio", x = "DTI", y = "Count") +
  theme_minimal()
```

```{r echo=FALSE, warning=FALSE, message=FALSE}

nystate |>
  filter(race != "White") |>
  ggplot(aes(x = loan_to_value_ratio, y = interest_rate, color = race)) + 
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE) +  # Adds a line of best fit without the confidence interval
  xlim(0, 100) +  # Adjust the range to a suitable limit for your data
  theme_minimal()

nystate |>
  filter(race != "Hispanic or Latino") |>
    filter(race != "Other") |>
    filter(race != "Asian") |>
  ggplot(aes(x = loan_to_value_ratio, y = interest_rate, color = race)) + 
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE) +  # Adds a line of best fit without the confidence interval
  xlim(0, 100) +  # Adjust the range to a suitable limit for your data
  theme_minimal()

ggplot(nystate, aes(x = loan_to_value_ratio, y = interest_rate, color = dtir)) + 
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE) +  # Adds a line of best fit without the confidence interval
  xlim(0, 100) +  # Adjust the range to a suitable limit for your data
  theme_minimal()
```

```{r echo=FALSE, warning=FALSE, message=FALSE, plot-wider5, fig.width=9, fig.height=4}

nystate |> filter(!is.na(action_taken)) |>
  filter(action_taken != "Approved, not accepted") |>
  filter(race != "Other") |>
  ggplot(aes(x = action_taken, fill = action_taken)) +
  geom_bar(position = "dodge", width = 0.7) +
  facet_wrap(~ race, ncol = 5) +
  theme_minimal() +
  labs(x = "Action Taken", fill = "Action Taken") +
  theme_minimal(base_size = 12) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for better readability
    legend.position = "top",  # Move the legend to the top for better visibility
    plot.title = element_text(hjust = 0.5)  # Center the plot title
  ) +
  ggtitle("Action Taken by Race in NY State")
```

```{r echo=FALSE, warning=FALSE, message=FALSE}

nystate <- nystate %>% 
  filter(action_taken != "Approved, not accepted") |>
  mutate(action_dummy = case_when(
    action_taken == "Denied" ~ 0,
    action_taken == "Loan originated" ~ 1
  ))

# Fit a probit model
probit_model <- glm(
  action_dummy ~ race + dtir + income + applicant_credit_score_type + loan_to_value_ratio, 
  family = binomial(link = "probit"), 
  data = nystate
)

no_other <- nystate |>
  filter(race != "Other") |>
  mutate(race = relevel(as.factor(race), ref = "White"))

  probit_model <- glm(
  action_dummy ~ race + dtir + income + applicant_credit_score_type + loan_to_value_ratio, 
  family = binomial(link = "probit"), 
  data = no_other
)
```

ltv buckets, applicant credit score type. distribution for each race - risk for different types of borrowers? interpret the graphs. accept or not, controlling for risk factors, ethnicity coefficient should be zero.

stack the states datasets, control for state, have a variable called states, compare the states to see if some are more discriminatory than others. break up the ltv into buckets. make one of the dti buckets the reference category.
